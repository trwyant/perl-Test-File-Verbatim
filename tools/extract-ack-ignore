#!/usr/bin/env perl

use 5.010;

use strict;
use warnings;

use ExtUtils::MakeMaker;
use Getopt::Long 2.33 qw{ :config auto_version };
use Module::Load::Conditional qw{ check_install };
use Pod::Usage;

our $VERSION = '0.000_006';

use constant CONFIG_DEFAULT	=> 'App::Ack::ConfigDefault';

my %opt;

GetOptions( \%opt,
    help => sub { pod2usage( { -verbose => 2 } ) },
) or pod2usage( { -verbose => 0 } );

my $config = check_install( module => CONFIG_DEFAULT )
    or die "Module @{[ CONFIG_DEFAULT ]} not installed\n";

my @extension;
my %is;
my @match;

{
    local $_ = undef;	# while (<>) does not localize $_.

    open my $fh, '<', $config->{file}
	or die "Unable to open $config->{file}: $!\n";

    while ( <$fh> ) {
	if ( m/--ignore-file=(.*)$/smx ) {
	    local $_ = $1;
	    chomp;
	    my ( $test, $data ) = split /:/, $_, 2;
	    my $code = __PACKAGE__->can( "record_$test" )
		or die "Test '$test' not recognized\n";
	    $code->( $data );
	}
    }
    close $fh;
}

my $ack_version = do {
    my $rv = check_install( module => 'App::Ack' );
    MM->parse_version( $rv->{file} );
};

print <<"EOD";

# Generated by $0 from @{[ CONFIG_DEFAULT ]},
# which is part of ack $ack_version
sub __ignore_file {
    -d
	and return 0;
    local \$_ = ( File::Spec->splitpath( \$_ ) )[2];
    state \$is = { map { \$_ => 1 } @{[ join ', ', sort keys %is ]} };
    \$is->{\$_}
	and return 1;
    state \$ext = { map { \$_ => 1 } qw{ @{[ sort @extension ]} } };
    my ( \$extension ) = m/ [.] ( [^.]+ ) \\z /smx;
    \$ext->{\$extension}
	and return 1;
    return m/@{[ join '|', @match ]}/;
}
EOD

sub record_ext {
    my ( $data ) = @_;
    my @ext = split /,/, $data
	or return;
    push @extension, @ext;
    return;
}

sub record_is {
    my ( $data ) = @_;
    $data =~ s/'/\\'/smxg;
    $is{"'$data'"} = 1;
    return;
}

sub record_match {
    my ( $data ) = @_;
    $data =~ s/ ( . ) ( .* ) \1 \z /$2/smx;
    push @match, $data;
    return;
}

__END__

=head1 TITLE

extract-ack-ignore - Generate __ignore_file() from App::Ack::ConfigDefault

=head1 SYNOPSIS

 extract-ack-ignore
 extract-ack-ignore --help
 extract-ack-ignore --version

=head1 OPTIONS

=head2 --help

This option displays the documentation for this script. The script then
exits.

=head2 --version

This option displays the version of this script. The script then exits.

=head1 DETAILS

This Perl script reads
L<App::Ack::ConfigDefault|App::Ack::ConfigDefault>, finds all the
C<--ignore-file> specifications, and writes the source of Perl
subroutine C<__ignore_file()> to STDOUT.

=head1 AUTHOR

Thomas R. Wyant, III F<wyant at cpan dot org>

=head1 COPYRIGHT AND LICENSE

Copyright (C) 2022 by Thomas R. Wyant, III

This program is free software; you can redistribute it and/or modify it
under the same terms as Perl 5.10.0. For more details, see the full text
of the licenses in the directory LICENSES.

This program is distributed in the hope that it will be useful, but
without any warranty; without even the implied warranty of
merchantability or fitness for a particular purpose.

=cut

# ex: set textwidth=72 :
